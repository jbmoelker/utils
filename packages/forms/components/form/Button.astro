---
import getContext from "@astro-utils/context";
import { createUniqueContinuanceName } from "../../dist/form-tools/connectId.js";
import { isPost, validateAction } from "../../dist/form-tools/post.js";

export interface Props extends astroHTML.JSX.ButtonHTMLAttributes {
	onClick: Function;
    connectId?: string
    whenFormOK?: boolean
}

const {onClick, whenFormOK, connectId = createUniqueContinuanceName(onClick), ...props} = Astro.props;
const {bind, executeAfter} = getContext(Astro, "@astro-utils/forms");

const checkFormValidation = whenFormOK && !bind?.errors.length || !whenFormOK;

if (isPost(Astro) && await validateAction(Astro, 'button-callback', connectId) && checkFormValidation) {
    if (executeAfter) {
        executeAfter.push(onClick);
    } else {
        await onClick();
    }
}

---
<button type="submit" name="button-callback" value={connectId} {...props}>
    <slot/>
</button>

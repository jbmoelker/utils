---
import { validatePostRequest } from '../../dist/form-tools/post.js';
import { validateSelect } from '../../dist/components/select.js';
import { getSelectValue } from '../../dist/components/select.js';
import getContext from '@astro-metro/context';
import Context from '@astro-metro/context/Context.astro';

export interface Props extends astroHTML.JSX.SelectHTMLAttributes {
    name: string
    errorMessage?: string
    type?: 'string' | 'number' | 'date'
};

const {bind, method} = getContext(Astro, "@astro-metro/forms");

const {value: defaultValue, ...props} = Astro.props;
let value = bind[Astro.props.name] ?? defaultValue;

if(!Astro.props.disabled && method === "POST" && await validatePostRequest(Astro as any)){
    await validateSelect(Astro, bind);
    value = await getSelectValue(Astro);
}


const isValueNotArray = !Array.isArray(value);
if(isValueNotArray){
    value = value != null ? [value]: [];
}

---
<Context name={Astro.props.name} value={value} allowSelected={isValueNotArray} contextName="@astro-metro/forms">
    <select {...props}>
        <slot/>
    </select>
</Context>
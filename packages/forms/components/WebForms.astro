---
import {asyncContext} from '@astro-utils/context';
import {createFormToken} from '../dist/form-tools/csrf.js';
import {FORM_OPTIONS} from '../dist/settings.js';

export interface Props extends astroHTML.JSX.FormHTMLAttributes {
}

const context = {
    ...Astro.props,
    webFormsSettings: {haveFileUpload: false}
};

const htmlSolt = await asyncContext(() => Astro.slots.render('default'), Astro, {name: '@astro-utils/forms', context});

const {webFormsSettings, ...props} = context;
if (webFormsSettings.haveFileUpload) {
    props.enctype = 'multipart/form-data';
}

const formRequestToken = FORM_OPTIONS.session?.cookieOptions?.maxAge && await createFormToken(Astro);
---
<form method="post" {...props}>
    {formRequestToken && <input type="hidden" name={formRequestToken.filed} value={formRequestToken.token}/>}
    <Fragment set:html={htmlSolt}/>
</form>
